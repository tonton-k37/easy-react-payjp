import { MountFormType, PayjpCheckoutType, PayjpV2Type, SupportedLanguageType } from '../types';
export declare class PayjpCheckoutService {
    private _PayjpSource;
    get PayjpSource(): string;
    set PayjpSource(value: string);
    private _publicToken;
    get publicToken(): string;
    set publicToken(value: string);
    private _buttonAppendTo;
    get buttonAppendTo(): string;
    set buttonAppendTo(value: string);
    private _onTokenCreated;
    get onTokenCreated(): <T>(args: T) => any;
    set onTokenCreated(value: <T>(args: T) => any);
    private _onTokenFailedToCreate;
    get onTokenFailedToCreate(): any | undefined;
    set onTokenFailedToCreate(value: <T>(args: T) => any);
    private _text;
    get text(): string;
    set text(value: string);
    private _submitText;
    get submitText(): string;
    set submitText(value: string);
    private _tokenName;
    get tokenName(): string;
    set tokenName(value: string);
    private _previousToken;
    get previousToken(): string;
    set previousToken(value: string);
    private _lang;
    get lang(): SupportedLanguageType;
    set lang(value: SupportedLanguageType);
    private _namePlaceholder;
    get namePlaceholder(): string;
    set namePlaceholder(value: string);
    private _tenant;
    get tenant(): string;
    set tenant(value: string);
    private _partial;
    get partial(): boolean;
    set partial(value: boolean);
    constructor({ PayjpSource, publicToken, buttonAppendTo, onTokenCreated, onTokenFailedToCreate, text, submitText, tokenName, previousToken, lang, namePlaceholder, tenant, partial, }: PayjpCheckoutType);
    mountButton(): void;
    private setCallBackToWindow;
    private getAttributeList;
}
export declare class PayjpV2Service {
    private _formAppendTo;
    get formAppendTo(): string;
    set formAppendTo(value: string);
    private _PayjpV2Source;
    get PayjpV2Source(): string;
    set PayjpV2Source(value: string);
    private _publicToken;
    get publicToken(): string;
    set publicToken(value: string);
    private _onTokenCreated;
    get onTokenCreated(): <T>(args: T) => any;
    set onTokenCreated(value: <T>(args: T) => any);
    private _onNumberFormInputChange;
    get onNumberFormInputChange(): <T>(args: T) => any;
    set onNumberFormInputChange(value: <T>(args: T) => any);
    private _scriptId;
    get scriptId(): string;
    set scriptId(value: string);
    private _Payjp;
    get Payjp(): any;
    set Payjp(value: any);
    private _elements;
    get elements(): any;
    set elements(value: any);
    card: any;
    constructor({ formAppendTo, PayjpV2Source, }: {
        formAppendTo?: string | undefined;
        PayjpV2Source?: string | undefined;
    });
    init({ publicToken, onTokenCreated, onNumberFormInputChange, }: PayjpV2Type): void;
    createScript(callbackFunction?: <T>(args?: T) => any): Promise<unknown>;
    createElements(): void;
    mountForm(form: MountFormType): void;
    submit(): void;
}
